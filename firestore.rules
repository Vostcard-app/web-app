rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own scripts
    match /scripts/{userId}/userScripts/{scriptId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own vostcards
    match /vostcards/{vostcardId} {
      allow read: if true; // Allow all users to read vostcards (for the map)
      allow write: if request.auth != null && request.auth.uid == resource.data.userID;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userID;
      
      // Allow authenticated users to read and write like counts
      match /likeCount/{document} {
        allow read: if true; // Anyone can read like counts
        allow write: if request.auth != null; // Only authenticated users can modify like counts
      }
      
      // Allow authenticated users to manage ratings
      match /ratings/{userId} {
        allow read: if true; // Anyone can read ratings (for averages)
        allow write: if request.auth != null && request.auth.uid == userId; // Users can only write their own ratings
      }
      
      // Allow anyone to read rating stats, authenticated users to write
      match /ratingStats/{document} {
        allow read: if true; // Anyone can read rating statistics
        allow write: if request.auth != null; // Only authenticated users can update stats
      }
      
      // Allow authenticated users to manage comments
      match /comments/{commentId} {
        allow read: if true; // Anyone can read comments
        allow create: if request.auth != null; // Authenticated users can create comments
        allow delete: if request.auth != null && request.auth.uid == resource.data.userID; // Users can only delete their own comments
      }
    }
    
    // Allow authenticated users to read and write their own user profiles
    // Allow any authenticated user to read basic user info for following functionality
    // Allow unauthenticated reads for username uniqueness check during registration
    match /users/{userId} {
      allow read: if true; // Allow unauthenticated reads for username checking and authenticated reads for following
      allow write: if request.auth != null && request.auth.uid == userId; // Only allow users to write their own profile
      allow create: if request.auth != null && request.auth.uid == userId; // Explicitly allow creating user documents
      
      // Allow authenticated users to manage their own likes
      match /likes/{vostcardId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Allow authenticated users to read and write their own advertiser profiles
    match /advertisers/{userId} {
      allow read: if request.auth != null; // Allow authenticated users to read advertiser profiles
      allow write: if request.auth != null && request.auth.uid == userId; // Only allow advertisers to write their own profile
      allow create: if request.auth != null && request.auth.uid == userId; // Explicitly allow creating advertiser documents
    }
    
    // ADD THIS NEW RULE - Allow authenticated users to read and write their own business documents
    match /businesses/{userId} {
      allow read: if request.auth != null; // Allow authenticated users to read business profiles
      allow write: if request.auth != null && request.auth.uid == userId; // Only allow users to write their own business profile
      allow create: if request.auth != null && request.auth.uid == userId; // Explicitly allow creating business documents
    }
    
    // Allow authenticated users to create flag reports
    match /flags/{flagId} {
      allow create: if request.auth != null; // Allow authenticated users to create flag reports
      allow read: if request.auth != null && request.auth.uid == resource.data.flaggedBy; // Users can only read their own flags
      // Note: Updates and deletes should only be allowed for admins (not implemented yet)
    }
    
    // Allow authenticated users to manage private Vostcards
    match /privateVostcards/{privateVostcardId} {
      allow create: if request.auth != null; // Allow authenticated users to create private Vostcards
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.senderUserID || 
        request.auth.uid == resource.data.recipientUserID
      ); // Users can only read private Vostcards they sent or received
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.senderUserID || 
        request.auth.uid == resource.data.recipientUserID
      ); // Users can only update private Vostcards they sent or received
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.senderUserID || 
        request.auth.uid == resource.data.recipientUserID
      ); // Users can only delete private Vostcards they sent or received
    }
  }
} 