rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Allow public read access to all files (no authentication required)
    match /{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to upload/manage their own avatars
    match /avatars/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload/manage their own Vostcard media (including audio)
    match /vostcards/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Legacy quickcard storage paths (for backward compatibility)
    match /quickcards/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload/manage their own Drivecard media (including audio)
    match /drivecards/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload/manage their own script media
    match /scripts/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload/manage their own offer images
    match /offers/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Music library uploads (temporary: allow any authenticated user to write)
    match /library/music/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}
